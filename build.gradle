plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.project'
version = '0.0.1-SNAPSHOT'
description = 'maumii_be'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	//메일샌드
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'net.nurigo:sdk:4.3.0'
//	implementation 'org.apache.tomcat:tomcat-websocket:10.1.26'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	// 기본 Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'

// (선택) Bean Validation을 @Valid/@NotBlank 등에 쓴다면
	implementation 'org.springframework.boot:spring-boot-starter-validation'

// (선택) JWT 쓰는 경우
	implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
	runtimeOnly    'io.jsonwebtoken:jjwt-impl:0.12.5'
	runtimeOnly    'io.jsonwebtoken:jjwt-jackson:0.12.5'

// (선택) 시큐리티 테스트 유틸
	testImplementation 'org.springframework.security:spring-security-test'

	//webflux
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
//redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
}

tasks.named('test') {
	useJUnitPlatform()
}
